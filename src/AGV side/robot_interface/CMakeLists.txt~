cmake_minimum_required(VERSION 2.8.3)
project(robot_interface)


find_package(catkin REQUIRED COMPONENTS
  roscpp rospy std_msgs geometry_msgs roslaunch message_generation #rosaria
)

find_package(Boost REQUIRED COMPONENTS thread)
include_directories(${catkin_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS} )

find_package(Aria QUIET COMPONENTS ArNetworking)
if(Aria_FOUND)
	if(EXISTS "${Aria_INCLUDE_DIRS}/Aria.h")
		add_definitions(-DADEPT_PKG)
	endif()
  include_directories(${Aria_INCLUDE_DIRS})
  link_directories(${Aria_LIBRARY_DIRS})
else()
	# The installation package provided by Adept doesn't follow Debian policies
	if(EXISTS "/usr/local/Aria/include/Aria.h")
	  add_definitions(-DADEPT_PKG)
	  include_directories( /usr/local/Aria/include /usr/local/Aria/ArNetworking/include)
	  link_directories(/usr/local/Aria/lib)
	endif()
endif()

include_directories(include $(catkin_INCLUDE_DIRS))

add_service_files(FILES 
  PBGo.srv)


generate_messages(
  DEPENDENCIES
  std_msgs)
		

catkin_package(
  LIBRARIES robot_interface ptu46
  CATKIN_DEPENDS roscpp rospy std_msgs message_runtime
)



## Declare a cpp executable


add_executable(interface src/interface.cpp)
target_link_libraries(interface  ${catkin_LIBRARIES}  )

add_executable(ROS_sickLogger src/ROS_sickLogger.cpp)
target_link_libraries(ROS_sickLogger ${catkin_LIBRARIES} ${Boost_LIBRARIES} Aria pthread dl rt ArNetworking)
set_target_properties(ROS_sickLogger PROPERTIES COMPILE_FLAGS "-fPIC")

add_executable(PBGo_server src/PBGo_server.cpp)
add_dependencies( PBGo_server robot_interface_generate_messages_cpp )
target_link_libraries(PBGo_server ${catkin_LIBRARIES} ${Boost_LIBRARIES} Aria pthread dl rt ArNetworking)
set_target_properties(PBGo_server PROPERTIES COMPILE_FLAGS "-fPIC")

# catkin_add_nosetests(test)
roslaunch_add_file_check(launch)

##install(
##  TARGETS 
##  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION} 
##  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
##  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
##)
